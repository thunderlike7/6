#include<iostream>
using namespace std;
void DFS(int [20][20],int,int [20],int);
int main()
{
int n,a[20][20],i,j,visited[20],source;
cout<<"Enter the number of vertices: ";
cin>>n;
cout<<"\nEnter the adjacency matrix:\n";
for(i=1;i<=n;i++)
for(j=1;j<=n;j++)
cin>>a[i][j];
for(i=1;i<=n;i++)
visited[i]=0;
cout<<"\nEnter the source node: ";
cin>>source;
DFS(a,source,visited,n);
for(i=1;i<=n;i++)
{
if(visited[i]==0)
{
cout<<"\nGraph is not connected";
exit(0);
}
}
cout<<"\nGraph is connectd\n";
}
void DFS(int a[20][20],int u,int visited[20],int n)
{
int v;
visited[u]=1;
for(v=1;v<=n;v++)
{
if(a[u][v]==1 && visited[v]==0)
DFS(a,v,visited,n);
}
}


/*
Enter the number of vertices: 3

Enter the adjacency matrix:
0
10
20
20
0
5
1
4
0

Enter the source node: 1

Graph is not connected
*/
