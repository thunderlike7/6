#include <iostream>
using namespace std;
int s,c[100][100],ver;
float optimum=999,sum;
void swap(int v[], int i, int j)
{
int t;
t = v[i];
v[i] = v[j];
v[j] = t;
}
void brute_force(int v[], int n, int i)
{
int j,sum1,k;
if (i == n)
{
if(v[0]==s)
{
for (j=0; j<n; j++)
cout<<v[j]<<"\t";
sum1=0;
for( k=0;k<n-1;k++)
{
sum1=sum1+c[v[k]][v[k+1]];
}
sum1=sum1+c[v[n-1]][s];
cout<<" sum= "<<sum1<<"\n";
if (sum1<optimum)
optimum=sum1;
}
}
else
for (j=i; j<n; j++)
{
swap (v, i, j);
brute_force (v, n, i+1);
swap (v, i, j);
}
}
void nearest_neighbour(int ver)
{

    int min,p,i,j,vis[20],from;
for(i=1;i<=ver;i++)
vis[i]=0;
vis[s]=1;
from=s;
sum=0;
for(j=1;j<ver;j++)
{
min=999;
for(i=1;i<=ver;i++)
if(vis[i] !=1 &&c[from][i]<min && c[from][i] !=0 )
{
min= c[from][i];
p=i;
}
vis[p]=1;
from=p;
sum=sum+min;
}
sum=sum+c[from][s];
}
int main ()
{
int ver,v[100],i,j;
cout<<"Enter n :";
cin>>ver;
for (i=0; i<ver; i++)
v[i] = i+1;
cout<<"Enter cost matrix\n";
for(i=1;i<=ver;i++)
for(j=1;j<=ver;j++)
cin>>c[i][j];
cout<<"\nEnter source :";
cin>>s;
brute_force (v, ver, 0);
 cout<<"\nOptimum solution with brute force technique is="<<optimum<<"\n";
nearest_neighbour(ver);
cout<<"\nSolution with nearest neighbour technique is="<<sum<<"\n";
cout<<"\nThe approximation val is="<<((sum/optimum)-1)*100<<"%";
}


/*
Enter n :4
Enter cost matrix
1
2
0
4
0
5
1
0
4
0
1
2
3
5
1
4

Enter source :1
1       2       3       4        sum= 8
1       2       4       3        sum= 7
1       3       2       4        sum= 3
1       3       4       2        sum= 7
1       4       3       2        sum= 5
1       4       2       3        sum= 14

Optimum solution with brute force technique is=3

Solution with nearest neighbour technique is=8

The approximation val is=166.667%
*/
